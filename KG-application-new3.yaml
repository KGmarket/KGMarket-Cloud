AWSTemplateFormatVersion: 2010-09-09
Description: KG application 


######################
# Parameters section
######################

Parameters:

  kgVPC:
    Description: kgVPC
    Type: AWS::EC2::VPC::Id

  PublicSubnet1:
    Description: PublicSubnet1
    Type: AWS::EC2::Subnet::Id

  PublicSubnet2:
    Description: PublicSubnet2
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet1:
    Description: PrivateSubnet1
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet2:
    Description: PrivateSubnet2
    Type: AWS::EC2::Subnet::Id

  ALBSG:
    Description: ALBSG
    Type: AWS::EC2::SecurityGroup::Id

  WebSG:
    Description: WebSG
    Type: AWS::EC2::SecurityGroup::Id

  BASTIONSG:
    Description: BASTION SG
    Type: AWS::EC2::SecurityGroup::Id

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

######################
# Bastion section
######################

Resources:
 
  MyBastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-033a6a056910d1137
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: MyBastion
      SecurityGroupIds:
        - !Ref BASTIONSG
      SubnetId: !Ref PublicSubnet1
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install -y httpd mysql
          amazon-linux-extras install -y php7.2
          Echo "<h1>Test Web Page</h1>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda"
        Ebs:
          DeleteOnTermination: 'true'
          VolumeSize: 8
          VolumeType: gp2


######################
# Application Load Balancer section
######################

 
  ##TargetGroup
  ELBTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref kgVPC
      Name: kg-TG
      Port: 80
      Protocol: HTTP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  ##Application Load Balancer
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: kg-ALB
      SecurityGroups: 
        - !Ref ALBSG
      Subnets: 
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: application

  ##ALBListenter
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
     - ELBTG
     - ALB
    Properties:
      DefaultActions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ELBTG
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

######################
# launch Template
######################

  MyEC2Template:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyEC2Template
      LaunchTemplateData:
        ImageId: ami-0c30bfe393977be04
	## 해당 ImageId 로 변경 
        InstanceType: t2.micro					
        SecurityGroupIds:
        - !Ref WebSG
        KeyName: !Ref KeyName

######################
# Auto Scaling Group
######################

  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
     - MyEC2Template
     - ALB
     - ELBTG
    Properties: 
      AutoScalingGroupName: MyASG
      LaunchTemplate: 
        LaunchTemplateName: MyEC2Template
        Version: !GetAtt MyEC2Template.LatestVersionNumber
      MaxSize: 2
      MinSize: 2
      TargetGroupARNs: 
        - !Ref ELBTG
      VPCZoneIdentifier: 
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: Web-Auto
          PropagateAtLaunch: true



